% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_survival.R
\name{CFsurvfit}
\alias{CFsurvfit}
\title{Estimate counterfactual survival functions}
\usage{
CFsurvfit(time, event, treat, fit.times = sort(unique(time[time > 0 &
  time < max(time)])), fit.treat = c(0, 1),
  cond.surv.method = c("randomForestSRC", "coxph", NULL),
  confounders = NULL, cens.subset = NULL,
  propensity.method = c("SuperLearner", "glm", NULL),
  treat.subset = NULL, SL.library = NULL, S.hats.0 = NULL,
  G.hats.0 = NULL, S.hats.1 = NULL, G.hats.1 = NULL, g.hats = NULL,
  conf.band = TRUE, conf.level = 0.95, surv.diffs = TRUE,
  surv.ratios = TRUE, risk.ratios = FALSE, nnt = FALSE,
  verbose = FALSE, ...)
}
\arguments{
\item{time}{n x 1 numeric vector of observed right-censored follow-up times; i.e. the minimum of the event and censoring times.}

\item{event}{n x 1 numeric vector of status indicators of whether an event was observed.}

\item{treat}{n x 1 numeric vector of observed binary treatment/exposure group; either 0 or 1.}

\item{fit.times}{k x 1 numeric vector of time grid at which the counterfactual survival function is desired. Only values > 0 are allowed. Defauls to all unique positive values in \code{time}.}

\item{fit.treat}{Optional subset of \code{c(0,1)} for which the counterfactual survival curves are desired. For example, if \code{fit.treat=c(0,1)} (default behavior) then both placebo and treatment curves will be estimated, and if \code{fit.treat=0} then only the placebo curve will be estimated.}

\item{cond.surv.method}{The method that should be used to estimate the conditional survival and censoring probabilities. One of \code{randomForestSRC}, \code{coxph}, or \code{NULL}. If \code{randomForestSRC} is specified, the \code{randomForestSRC} package will be used to estimate random survival forests, and must be installed. If \code{coxph} is specified, the \code{coxph} function from the \code{survival} package will be used. If \code{cond.surv.method = NULL}, then \code{S.hats.0}, \code{G.hats.0}, and/or \code{S.hats.1} and \code{G.hats.1} must be specified.}

\item{confounders}{n x p numeric matrix of potential confounders to use when estimating the conditional survival probabilities. Missing values are not allowed}

\item{cens.subset}{Optional numeric vector of the columns of \code{confounders} that should be used to estimate the conditional censoring probabilities. Defaults to using all availalbe confounders to estimate the censoring probabilities.}

\item{propensity.method}{The method that should be used to estimate the propensity (i.e. probability of treatment) model. One of \code{glm}, \code{SuperLearner}, or \code{NULL}. If \code{glm} is specified, then a logistic regression will be used; if \code{SuperLearner} is specified, then the \code{SuperLearner} package will be used (and needs to be installed). If \code{propensity.method = NULL}, then \code{g.hats} must be provided.}

\item{treat.subset}{Optional numeric vector of the columns of \code{confounders} that should be used to estimate the propensities. Defaults to using all available confounders to estimate the propensities.}

\item{SL.library}{If \code{propensity.method = SuperLearner}, the library to use for the SuperLearner.}

\item{S.hats.0}{Optional n x k matrix of estimates of the conditional survival of the event given treatmet = 0 and confounders. If \code{propensity.method = NULL} and \code{0 \%in\% fit.treat}, then \code{S.hats.0} must be specified.}

\item{G.hats.0}{Optional n x k matrix of estimates of the conditional survival of censoring given treatmet = 0 and confounders. If \code{propensity.method = NULL} and \code{0 \%in\% fit.treat}, then \code{G.hats.0} must be specified.}

\item{S.hats.1}{Optional n x k matrix of estimates of the conditional survival of the event given treatmet = 1 and confounders. If \code{propensity.method = NULL} and \code{1 \%in\% fit.treat}, then \code{S.hats.1} must be specified.}

\item{G.hats.1}{Optional n x k matrix of estimates of the conditional survival of censoring given treatmet = 1 and confounders. If \code{propensity.method = NULL} and \code{1 \%in\% fit.treat}, then \code{G.hats.1} must be specified.}

\item{g.hats}{Optional n x 1 numeric vector of estimated propensities. If \code{propensity.method = NULL}, then \code{g.hats} must be specified.}

\item{conf.band}{Logical indicating whether to compute simultaneous confidence bands.}

\item{conf.level}{Desired coverage of confidence intervals/bands.}

\item{surv.diffs}{Logical indicating whether to return an estimate of the difference in the survival functions, along with confidence intervals and tests.}

\item{surv.ratios}{Logical indicating whether to return an estimate of the ratio in the survival functions, along with confidence intervals and tests.}

\item{risk.ratios}{Logical indicating whether to return an estimate of the difference in the survival functions, along with confidence intervals and tests.}

\item{nnt}{Logical indicating whether to return an estimate of the number needed to treat (nnt), along with confidence intervals.}

\item{verbose}{Logical indicating whether progress should be printed to the command line.}

\item{...}{Additional arguments to be passed on to \code{randomForestSRC::rfsrc} (only used if \code{cond.surv.method = randomForestSRC}).}
}
\value{
\code{CFsurvfit} returns a named list with the following elements:
\item{fit.times}{The time points at which the counterfactual survival curves (and contrasts) were fit.}
\item{surv.df}{A data frame with the estimated counterfactual survival functions and CIs.}
\item{IF.vals.0, IF.vals.1}{n x k matrices with the influence values for the counterfactual survival functions. Rows index observations, columns index time points.}
\item{surv.diff.df}{A data frame with the estimated counterfactual survival difference (treatment survival minus control survival), as well as confidence intervals and tests of the null hypothesis that the difference equals zero. Only returned if \code{surv.diffs=TRUE}.}
\item{surv.ratio.df}{A data frame with the estimated counterfactual survival ratio (treatment survival divided by control survival), as well as confidence intervals and tests of the null hypothesis that the ratio equals one. Note that standard errors and confidence intervals are first computed on the log scale, then exponentiated. Only returned if \code{surv.ratios=TRUE}.}
\item{risk.ratio.df}{A data frame with the estimated counterfactual risk ratio (treatment risk divided by control risk), as well as confidence intervals and tests of the null hypothesis that the ratio equals one. Note that standard errors and confidence intervals are first computed on the log scale, then exponentiated. Only returned if \code{risk.ratios=TRUE}.}
\item{nnt.df}{A data frame with the estimated counterfactual number needed to treat (one divided by the survival difference), as well as confidence intervals and tests of the null hypothesis that the ratio equals one. Note that standard errors and confidence intervals are first computed on the log scale, then exponentiated. Only returned if \code{nnt=TRUE}.}
\item{surv.0.sim.maxes, surv.1.sim.maxes, surv.diff.}{Samples from the approximate distribution of the maximum of the limiting Gaussian processes of the counterfactual survival functions.}
\item{g.hats}{The estimated treatment propensities.}
\item{S.hats.0, S.hats.1}{The estimated conditional survival functions of the event.}
\item{G.hats.0, G.hats.1}{The estimated conditional survival functions of censoring.}
\item{data}{The original time, event, and treatment data supplied to the function.}
}
\description{
This function estimates counterfactual survival functions and contrasts from right-censored data subject to potential confounding.
}
\details{
For a binary treatment measured at baseline, the counterfactual survival through time \code{t} for treatment level \code{a} is defined as the probability of survival up to time \code{t} were all units in the population assigned to treatment \code{a}. This quantity is estimated using an augmented inverse probability of treatment/censoring weighted (AIPTW) estimator. Our estimator of the counterfactual survival function requires further estimation of three nuisance parameters: the conditional probability of receiving treatment given a set of potential confounders (i.e. the treatment propensity), the conditional survival function of the event given confounders, and the conditional survival function of censoring given confounders. At the moment, we provide two ways of estimating each of these nuisance parameters. The treatment propensity can be estimated either using a logistic regression or SuperLearner (van der Laan and Polley, 2006). The conditional survival functions of event and censoring can be estimated using Cox proportional hazard models or survival random forests (Ishwaran et al.). Additionally, the estimates of any of these parameters can be passed in directly if another method is desired.

\code{CFsurvival} by default returns 95\% pointwise confidence intervals and 95\% uniform confidence bands, both of which are based on the influence function of the estimator. Contrasts of the counterfactual survival under treatment and control can also be obtained, including the survival difference, survival ratio, risk ratio, and number needed to treat. Pointwise confidence intervals and uniform confidence bands for these contrasts will also be computed.
}
\examples{
# Define parameters
n <- 300
expit <- function(x) 1/(1 + exp(-x))
betaT <- 2; lambdaT <- 20; betaC <- 2; lambdaC <- 15

# Define the true survival functions of the control (S0) and treatment (S1) groups
S0 <- function(t) sapply(t, function(t0) integrate(function(w) .5 * pweibull(t0, shape=betaT, scale=lambdaT * exp(-w-1), lower.tail = FALSE), lower=-1, upper=1)$value)
S1 <- function(t) sapply(t, function(t0) integrate(function(w) .5 * pweibull(t0, shape=betaT, scale=lambdaT * exp(-w), lower.tail = FALSE), lower=-1, upper=1)$value)

# Simulate data
covar <- runif(n, min=-1, max=1)
g0s <- expit(.2 - covar)
rx <- rbinom(n, size=1, prob=g0s)
event.time <- rweibull(n, shape = betaT, scale = lambdaT * exp(-covar - 1 + rx))
cens.time <- rweibull(n, shape = betaC, scale = lambdaC * exp(-covar/5 - rx/5))
cens.time[cens.time > 15] <- 15
obs.time <- pmin(event.time, cens.time)
obs.event <- as.numeric(event.time <= cens.time)

# Estimate the CF survivals
fit <- CFsurvfit(time=obs.time, event=obs.event, treat=rx, cond.surv.method = "coxph", confounders = data.frame(covar), propensity.method = "glm", surv.diffs=TRUE, surv.ratios=TRUE, risk.ratios=TRUE, nnt=TRUE, verbose=TRUE)

# It is a good idea to check the min/max of the propensity estimates and the min of the censoring estimates
# If they are very small, there may be positivity violations, which may result in invalid inference.
min(fit$g.hats)
max(fit$g.hats)
min(fit$G.hats.0)
min(fit$G.hats.1)

# Plot the output
\dontrun{
library(ggplot2)

# First plot the survival curves + conf intervals + conf bands
fit$surv.df$true.surv <- c(S1(c(0, fit$fit.times)), S0(c(0, fit$fit.times)))
ggplot(fit$surv.df) +
    geom_line(aes(time, true.surv, group=trt), color='black') +
    geom_line(aes(time, surv, color=as.factor(trt), group=trt)) +
    geom_line(aes(time, ptwise.lower, color=as.factor(trt), group=trt), linetype=2) +
    geom_line(aes(time, ptwise.upper, color=as.factor(trt), group=trt), linetype=2) +
    geom_line(aes(time, unif.lower, color=as.factor(trt), group=trt), linetype=3) +
    geom_line(aes(time, unif.upper, color=as.factor(trt), group=trt), linetype=3) +
    scale_color_discrete("Treatment") +
    xlab("Time") +
    ylab("Survival") +
    coord_cartesian(xlim=c(0,15), ylim=c(0,1))

# Next plot the survival difference
fit$surv.diff.df$true.surv.diff <- c(S1(fit$surv.diff.df$time) - S0(fit$surv.diff.df$time))
ggplot(fit$surv.diff.df) +
    geom_line(aes(time, true.surv.diff), color='red') +
    geom_line(aes(time, surv.diff)) +
    geom_line(aes(time, ptwise.lower), linetype=2) +
    geom_line(aes(time, ptwise.upper), linetype=2) +
    geom_line(aes(time, unif.lower), linetype=3) +
    geom_line(aes(time, unif.upper), linetype=3) +
    xlab("Time") +
    ylab("Survival difference (treatment - control)") +
    coord_cartesian(xlim=c(0,15), ylim=c(0,1))

fit$surv.ratio.df$true.surv.ratio <- c(S1(fit$surv.ratio.df$time) / S0(fit$surv.ratio.df$time))
ggplot(fit$surv.ratio.df) +
    geom_line(aes(time, true.surv.ratio), color='red') +
    geom_line(aes(time, surv.ratio)) +
    geom_line(aes(time, ptwise.lower), linetype=2) +
    geom_line(aes(time, ptwise.upper), linetype=2) +
    geom_line(aes(time, unif.lower), linetype=3) +
    geom_line(aes(time, unif.upper), linetype=3) +
    xlab("Time") +
    ylab("Survival ratio (treatment / control)") +
    coord_cartesian(xlim=c(0,15), ylim=c(0,10))

# Risk ratio
fit$risk.ratio.df$true.risk.ratio <- (1 - S1(fit$risk.ratio.df$time)) / (1 - S0(fit$risk.ratio.df$time))
ggplot(fit$risk.ratio.df) +
    geom_line(aes(time, true.risk.ratio), color='red') +
    geom_line(aes(time, risk.ratio)) +
    geom_line(aes(time, ptwise.lower), linetype=2) +
    geom_line(aes(time, ptwise.upper), linetype=2) +
    geom_line(aes(time, unif.lower), linetype=3) +
    geom_line(aes(time, unif.upper), linetype=3) +
    coord_cartesian(xlim=c(0,15), ylim=c(0,1)) +
    xlab("Time") +
    ylab("Risk ratio (treatment / control)")

# Number needed to treat
fit$nnt.df$true.nnt <- 1/(S1(fit$nnt.df$time) - S0(fit$nnt.df$time))
ggplot(fit$nnt.df) +
    geom_line(aes(time, true.nnt), color='red') +
    geom_line(aes(time, nnt)) +
    geom_line(aes(time, ptwise.lower), linetype=2) +
    geom_line(aes(time, ptwise.upper), linetype=2) +
    geom_line(aes(time, unif.lower), linetype=3) +
    geom_line(aes(time, unif.upper), linetype=3) +
    coord_cartesian(xlim=c(0,15), ylim=c(0, 10)) +
    xlab("Time") +
    ylab("Number needed to treat (NNT)")}
}
\references{
Ishwaran, H., Kogalur, U. B., Blackstone, E. H., & Lauer, M. S. (2008). Random survival forests. \emph{The Annals of Applied Statistics}, 2(3), 841-860.

van der Laan, M. J., Polley, E. C., & Hubbard, A. E. (2007). Super learner. \emph{Statistical Applications in Genetics and Molecular Biology}, 6(1).
}
\seealso{
[rfrsc()], [SuperLearner()]
}
